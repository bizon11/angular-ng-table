/*!
 * angular-ht-ng-table
 * https://github.com/hightest/angular-ng-table
 * Version: 0.0.1 - 2015-01-14T14:55:45.431Z
 * License: 
 */
var app=angular.module("ht.table",["ui.bootstrap"]);app.directive("htTable",function(){return{templateUrl:"ht-table.html",scope:{htTable:"="},controller:["$scope","orderByFilter",function(t,e){var a=t.htTable,i=angular.isDefined(a.rowClick)?a.rowClick:function(){},n=angular.isDefined(a.expand)?a.expand:function(){},l=this,o=a.data,r=angular.isDefined(a.init)?a.init:function(){};this.fields=a.fields,this.checked=[],this.pagination={total:0,current:1,itemsPerPage:10};var s=[];this.data=o,t.$watch("htTable",function(t,e){t!=e&&(o=t.data,l.reloadTable())},!0),angular.forEach(this.fields,function(t){angular.isUndefined(t.visible)&&(t.visible=!0)}),this.reloadTable=function(){var t=[];angular.forEach(s,function(e){var a="";a="asc"==e.sort?"+":"-",a+=e.field,t.push(a)});var a=s.length?e(o,t):o;angular.isFunction(r)&&(r(a,this.pagination),r=null),this.pagination.total=a.length,this.data=this.pagination.itemsPerPage?a.slice((this.pagination.current-1)*this.pagination.itemsPerPage,this.pagination.current*this.pagination.itemsPerPage):a},this.reloadTable(),t.$watch(function(){return l.pagination.itemsPerPage},function(t,e){t!=e&&l.reloadTable()}),this.expand=function(t){return i(t)},this.show=function(t){return n(t)},this.pageChanged=function(){this.reloadTable()},this.getFieldClass=function(t){for(var e=0;e<s.length;e++)if(t.value==s[e].field)return"asc"==s[e].sort?"ht-table-icon-up":"ht-table-icon-down";return""},this.changeSorting=function(t){for(var e=!1,a=0;a<s.length;a++)if(s[a].field==t.value){var i=s[a].sort;"asc"==i?s[a].sort="desc":s.splice(a,1),e=!0;break}e||s.push({field:t.value,sort:"asc"}),this.reloadTable()},this.countColumns=function(){var t=1;return angular.forEach(this.fields,function(e){e.visible&&t++}),t}}],controllerAs:"table"}}),angular.module("ht.table").run(["$templateCache",function(t){t.put("ht-table.html",'<div class="table-responsive"><table class="table table-bordered" id="table"><thead><tr><th><div dropdown="" class="btn-group"><button class="btn btn-default dropdown-toggle" type="button" dropdown-toggle=""><span class="glyphicon glyphicon-cog" aria-hidden="true"></span></button><ul class="dropdown-menu" role="menu" ng-click="$event.stopPropagation()"><li ng-repeat="field in table.fields"><label><input type="checkbox" ng-model="field.visible">{{field.name}}</label></li></ul></div></th><th ng-repeat="field in table.fields" ng-if="field.visible" ng-click="table.changeSorting(field)"" ng-class="table.getFieldClass(field)">{{field.name}}</th></tr></thead><tbody><tr ng-repeat-start="row in table.data" ng-class="{active: table.show(row)}"><th scope="row"><input type="checkbox" ng-model="table.checked[row.id]"></th><td ng-repeat="field in table.fields" ng-if="field.visible" ng-click="table.expand(row)">{{row[field.value]}}</td></tr><tr ng-repeat-end="" ng-if="table.show(row)"><td colspan="{{table.countColumns()}}"><div ui-view=""></div></td></tr></tbody></table></div><div class="row"><div class="col-xs-6"><pagination total-items="table.pagination.total" ng-model="table.pagination.current" ng-change="table.pageChanged()" items-per-page="table.pagination.itemsPerPage" previous-text="&laquo;" next-text="&raquo;"></pagination></div><div class="btn-group col-xs-6"><label class="btn btn-primary" ng-model="table.pagination.itemsPerPage" btn-radio="10">10</label> <label class="btn btn-primary" ng-model="table.pagination.itemsPerPage" btn-radio="25">25</label> <label class="btn btn-primary" ng-model="table.pagination.itemsPerPage" btn-radio="50">50</label> <label class="btn btn-primary" ng-model="table.pagination.itemsPerPage" btn-radio="100">100</label> <label class="btn btn-primary" ng-model="table.pagination.itemsPerPage" btn-radio="0">Wszystkie</label></div></div>')}]);