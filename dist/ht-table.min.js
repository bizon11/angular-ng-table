/*!
 * angular-ht-ng-table
 * https://github.com/hightest/angular-ng-table
 * Version: 0.0.1 - 2015-02-03T15:04:39.700Z
 * License: 
 */
var app=angular.module("ht.table",["ui.bootstrap"]);app.directive("htTable",function(){return{templateUrl:"ht-table.html",scope:{htTable:"="},controller:["$scope","orderByFilter",function(e,a){var t=this,n=e.htTable,i=angular.isDefined(n.rowClick)?n.rowClick:function(){},l=angular.isDefined(n.expand)?n.expand:function(){},r=angular.isDefined(n.checked)?n.checked:function(){};t.id=angular.isDefined(n.id)?n.id:"table",t.class=angular.isDefined(n.class)?n.class:[];var o=n.data,s=angular.isDefined(n.init)?n.init:function(){};t.fields=n.fields,t.pagination={total:0,current:1,itemsPerPage:10};var d=[];t.data=o,angular.forEach(t.fields,function(e){angular.isDefined(e.sort)&&d.push({field:e.value,sort:e.sort})}),e.$watch("htTable",function(e,a){e!=a&&(o=e.data,t.reloadTable())},!0),angular.forEach(t.fields,function(e){angular.isUndefined(e.visible)&&(e.visible=!0)}),t.reloadTable=function(){var e=[];angular.forEach(d,function(a){var t="";t="asc"==a.sort?"+":"-",t+=a.field,e.push(t)});var n=d.length?a(o,e):o;angular.isFunction(s)&&(s(n,t.pagination),s=null),t.pagination.total=n.length,t.data=t.pagination.itemsPerPage?n.slice((t.pagination.current-1)*t.pagination.itemsPerPage,t.pagination.current*t.pagination.itemsPerPage):n},t.reloadTable(),e.$watch(function(){return t.pagination.itemsPerPage},function(e,a){e!=a&&t.reloadTable()}),t.expand=function(e){return i(e)},t.show=function(e){return l(e)},t.pageChanged=function(){this.reloadTable()},t.getFieldClass=function(e){for(var a=0;a<d.length;a++)if(e.value==d[a].field)return"asc"==d[a].sort?"ht-table-icon-up":"ht-table-icon-down";return""};var c=function(e){for(var a=0;a<d.length;a++)if(d[a].field==e.value)return a;return null};t.changeSorting=function(e,a){var n=a.shiftKey,i=c(e),l={};if(l=null===i?{field:e.value,sort:"asc"}:d[i],null!==i){var r=l.sort;"asc"==r?(d[i].sort="desc",n||(d=[d[i]])):n?d.splice(i,1):d=[]}else n?d.push(l):d=[l];t.reloadTable()},t.countColumns=function(){var e=2;return angular.forEach(t.fields,function(a){a.visible&&e++}),e},t.checkedChange=function(){var e=t.getCheckedElements();r(e)},t.hasSum=function(){for(var e=0;e<t.fields.length;e++)if(angular.isDefined(t.fields[e].type)&&"sum"==t.fields[e].type)return!0;return!1},t.getCheckedElements=function(){var e=[];return angular.forEach(t.data,function(e){angular.isDefined(e.checked)&&e.checked&&this.push(e)},e),e},t.sum=function(e){var a=0,n=t.getCheckedElements();return n.length||(n=o),angular.forEach(n,function(t){a+=t[e]}),a}}],controllerAs:"table"}}),angular.module("ht.table").run(["$templateCache",function(e){e.put("ht-table.html",'<div class="table-responsive"><table class="table table-bordered" id="{{table.id}}" ng-class="table.class"><thead><tr><th>Lp.</th><th><div dropdown="" class="btn-group"><button class="btn btn-default dropdown-toggle" type="button" dropdown-toggle=""><span class="glyphicon glyphicon-cog" aria-hidden="true"></span></button><ul class="dropdown-menu" role="menu" ng-click="$event.stopPropagation()"><li ng-repeat="field in table.fields"><label><input type="checkbox" ng-model="field.visible">{{field.name}}</label></li></ul></div></th><th ng-repeat="field in table.fields" ng-if="field.visible" ng-click="table.changeSorting(field, $event)" ng-class="table.getFieldClass(field)" style="cursor:pointer">{{field.name}}</th></tr></thead><tbody><tr ng-repeat-start="row in table.data" ng-class="{active: table.show(row)}"><td>{{(table.pagination.current - 1) * table.pagination.itemsPerPage + $index + 1}}.</td><th scope="row"><input type="checkbox" ng-model="row.checked"></th><td ng-repeat="field in table.fields" ng-if="field.visible" ng-click="table.expand(row)">{{row[field.value]}}</td></tr><tr ng-repeat-end="" ng-if="table.show(row)"><td colspan="{{table.countColumns()}}"><div ui-view=""></div></td></tr></tbody><tfoot ng-if="table.hasSum()"><tr><td>&nbsp;</td><td>&nbsp;</td><td ng-repeat="field in table.fields" ng-if="field.visible"><span ng-if="field.type">Suma: {{table.sum(field.value) | number:2}}</span></td></tr></tfoot></table></div><div class="row"><div class="col-xs-6"><pagination total-items="table.pagination.total" ng-model="table.pagination.current" ng-change="table.pageChanged()" max-size="5" items-per-page="table.pagination.itemsPerPage" previous-text="&laquo;" next-text="&raquo;"></pagination></div><div class="btn-group col-xs-6"><label class="btn btn-primary" ng-model="table.pagination.itemsPerPage" btn-radio="10">10</label> <label class="btn btn-primary" ng-model="table.pagination.itemsPerPage" btn-radio="25">25</label> <label class="btn btn-primary" ng-model="table.pagination.itemsPerPage" btn-radio="50">50</label> <label class="btn btn-primary" ng-model="table.pagination.itemsPerPage" btn-radio="100">100</label> <label class="btn btn-primary" ng-model="table.pagination.itemsPerPage" btn-radio="0">Wszystkie</label></div></div>')}]);